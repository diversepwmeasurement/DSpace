env:
  DEPLOY_ARCH: linux/amd64
  DEPLOY_DEMO_BRANCH: dspace-7_x
  IMAGE_NAME: ${{ inputs.image_name }}
  IMAGE_TAGS: 'type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch
    }}

    type=ref,event=branch,enable=${{ github.ref_name != github.event.repository.default_branch
    }}

    type=ref,event=tag

    '
  REDEPLOY_DEMO_URL: ${{ secrets.REDEPLOY_DEMO_URL }}
  REDEPLOY_SANDBOX_URL: ${{ secrets.REDEPLOY_SANDBOX_URL }}
  TAGS_FLAVOR: 'latest=false

    ${{ inputs.tags_flavor }}

    '
jobs:
  docker-build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout codebase
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      name: Set up QEMU emulation to build for multiple architectures
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      if: ${{ ! matrix.isPr }}
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        username: ${{ secrets.DOCKER_USERNAME }}
    - continue-on-error: true
      id: meta_build
      name: Sync metadata (tags, labels) from GitHub to Docker for image
      uses: docker/metadata-action@v5
      with:
        flavor: ${{ env.TAGS_FLAVOR }}
        images: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
    - continue-on-error: true
      id: docker_build
      name: Build and push image
      uses: docker/build-push-action@v5
      with:
        build-contexts: '${{ inputs.dockerfile_additional_contexts }}

          '
        context: ${{ inputs.dockerfile_context }}
        file: ${{ inputs.dockerfile_path }}
        labels: ${{ steps.meta_build.outputs.labels }}
        platforms: ${{ matrix.arch }}
        push: false
        tags: ${{ steps.meta_build.outputs.tags }}
    - continue-on-error: true
      if: ${{ ! matrix.isPr }}
      name: Export Docker build digest
      run: 'mkdir -p /tmp/digests

        digest="${{ steps.docker_build.outputs.digest }}"

        touch "/tmp/digests/${digest#sha256:}"

        '
    - continue-on-error: true
      if: ${{ ! matrix.isPr }}
      name: Upload Docker build digest to artifact
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: digests-${{ inputs.build_id }}
        path: /tmp/digests/*
        retention-days: 1
    - continue-on-error: true
      if: '!matrix.isPR &&

        env.REDEPLOY_SANDBOX_URL != '''' &&

        matrix.arch == env.DEPLOY_ARCH &&

        github.ref_name == github.event.repository.default_branch

        '
      name: Redeploy sandbox.dspace.org (based on main branch)
      run: 'curl -X POST $REDEPLOY_SANDBOX_URL

        '
    - continue-on-error: true
      if: '!matrix.isPR &&

        env.REDEPLOY_DEMO_URL != '''' &&

        matrix.arch == env.DEPLOY_ARCH &&

        github.ref_name == env.DEPLOY_DEMO_BRANCH

        '
      name: Redeploy demo.dspace.org (based on maintenace branch)
      run: 'curl -X POST $REDEPLOY_DEMO_URL

        '
    strategy:
      matrix:
        arch:
        - linux/amd64
        - linux/arm64
        exclude:
        - arch: linux/arm64
          isPr: true
          os: ubuntu-latest
        isPr:
        - ${{ github.event_name == 'pull_request' }}
        os:
        - ubuntu-latest
  docker-build_manifest:
    if: ${{ github.event_name != 'pull_request' }}
    needs:
    - docker-build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download Docker build digests
      uses: actions/download-artifact@v3
      with:
        name: digests-${{ inputs.build_id }}
        path: /tmp/digests
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      id: meta
      name: Add Docker metadata for image
      uses: docker/metadata-action@v5
      with:
        flavor: ${{ env.TAGS_FLAVOR }}
        images: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
    - continue-on-error: true
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        username: ${{ secrets.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Create manifest list from digests and push
      run: 'docker buildx imagetools create $(jq -cr ''.tags | map("-t " + .) | join("
        ")'' <<< "$DOCKER_METADATA_OUTPUT_JSON") \

        $(printf ''${{ env.IMAGE_NAME }}@sha256:%s '' *)

        '
      working-directory: /tmp/digests
    - continue-on-error: true
      name: Inspect image
      run: 'docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version
        }}

        '
name: Reusable DSpace Docker Build
on:
  repository_dispatch:
    types: trigger-ga___reusable-docker-build.yml
